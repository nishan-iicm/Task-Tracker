{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a16fbb52.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className='btn'\r\n    >\r\n      {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\n\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n  \r\n\r\n  return (\r\n    <header className='header'>\r\n      <h1>{title}</h1>\r\n     \r\n        <Button\r\n          color={showAdd ? 'red' : 'green'}\r\n          text={showAdd ? 'Close' : 'Add'}\r\n          onClick={onAdd}\r\n        />\r\n      \r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\n// CSS in JS\r\n// const headingStyle = {\r\n//   color: 'red',\r\n//   backgroundColor: 'black',\r\n// }\r\n\r\nexport default Header","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? 'reminder' : ''}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{' '}\r\n        <FaTimes\r\n          style={{ color: 'red', cursor: 'pointer' }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task, index) => (\r\n        <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [reminder, setReminder] = useState(false)\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!text) {\r\n      alert('Please add a task')\r\n      return\r\n    }\r\n\r\n    onAdd({ text, day, reminder })\r\n   \r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n  }\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Task'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Day & Time</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Day & Time'\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type='checkbox'\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type='submit' value='Save Task' className='btn btn-block' />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask","import { useState, useEffect } from 'react'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\nconst App = () => {\n  const [showAddTask,setShowAddTask] = useState(false);\n  const [tasks,setTasks]=useState([\n    \n        {\n          \"id\": 1,\n          \"text\": \"Doctors Appointment\",\n          \"day\": \"Feb 5th at 2:30pm\",\n          \"reminder\": true\n        },\n        {\n          \"id\": 2,\n          \"text\": \"Meeting at School\",\n          \"day\": \"Feb 6th at 1:30pm\",\n          \"reminder\": true\n        },\n        {\n          \"id\": 3,\n          \"text\": \"Meeting at School\",\n          \"day\": \"Feb 6th at 1:30pm\",\n          \"reminder\": false\n        }\n     \n  ]);\n  const deleteTask=(id)=>{\n      setTasks(tasks.filter((task)=> task.id!==id))\n  }\n  const toggleReminder =(id)=>{\n      setTasks(tasks.map((task)=>task.id===id?{...task,reminder:!task.reminder}:task))\n  }\n  const addTask=(task) =>{\n    const id =Math.floor(Math.random()*10000)+1\n    const newTask= {id,...task}\n    setTasks([...tasks,newTask]);\n  }\n  return (\n    <div className=\"container\">\n    <Header title=\"Task Tracker\" onAdd={()=>setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n    {showAddTask && <AddTask onAdd={addTask} />}\n    {tasks.length>0?(<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>):('No Task to show')}\n\n    </div>\n  )}\n  export default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}